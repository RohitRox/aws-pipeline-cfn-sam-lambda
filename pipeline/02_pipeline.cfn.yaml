AWSTemplateFormatVersion: "2010-09-09"
Description: "Template for full CI/CD serverless applications."
Parameters:
  AppName:
    Type: String
    Description: Name of the application.
    Default: sam-sample-lambda

  # StagingFile:
  #   Type: String
  #   Description: The cloudformation staging file. Leave empty if no staging file is needed.
  #   Default: beta.json

  GitHubRepoName:
    Type: String
    Description: The GitHub repo name
    Default: aws-pipeline-cfn-sam-lambda
  GitHubRepoBranch:
    Type: String
    Description: The GitHub repo branch code pipelines should watch for changes on
    Default: master
  GitHubUser:
    Type: String
    Description: GitHub UserName. This username must have access to the GitHubToken.
    Default: rohitrox
  GitHubToken:
    NoEcho: true
    Type: String

# Conditions:
#   HasStagingVariables:
#     !Not
#       - !Equals [!Ref StagingFile, ""]
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "serverless-app-${AWS::AccountId}-${AWS::Region}-${AppName}"
      VersioningConfiguration:
        Status: Enabled
  S3ArtifactBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Id: SSEAndSSLPolicy
        Statement:
        - Sid: DenyInsecureConnections
          Effect: Deny
          Principal: "*"
          Action: s3:*
          Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"
          Condition:
            Bool:
              aws:SecureTransport: false

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: !Sub "Building stage for ${AppName}."
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value: !Ref S3Bucket
        Image: aws/codebuild/nodejs:8.11.0
        Type: LINUX_CONTAINER
      Name: !Sub "${AppName}-build"
      ServiceRole: !ImportValue CodeBuildRole
      Source:
        Type: CODEPIPELINE

  ProjectPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${AppName}-pipeline"
      RoleArn: !ImportValue CodePipelineRole
      Stages:
      - Name: Source
        Actions:
        - Name: source
          InputArtifacts: []
          ActionTypeId:
            Version: "1"
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
          OutputArtifacts:
          - Name: !Sub "${AppName}-SourceArtifact"
          Configuration:
            Repo: !Ref GitHubRepoName
            Branch: !Ref GitHubRepoBranch
            OAuthToken: !Ref GitHubToken
            Owner: !Ref GitHubUser
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: build-from-source
          InputArtifacts:
          - Name: !Sub "${AppName}-SourceArtifact"
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: "1"
            Provider: CodeBuild
          OutputArtifacts:
          - Name: !Sub "${AppName}-BuildArtifact"
          Configuration:
            ProjectName: !Ref CodeBuildProject
          RunOrder: 1
      - Name: Deploy
        Actions:
        - Name: create-changeset
          InputArtifacts:
          - Name: !Sub "${AppName}-BuildArtifact"
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: "1"
            Provider: CloudFormation
          OutputArtifacts: []
          Configuration:
            StackName: !Sub "${AppName}-serverless-stack"
            ActionMode: CHANGE_SET_REPLACE
            RoleArn: !ImportValue CloudformationDeployRole
            ChangeSetName: pipeline-changeset
            Capabilities: CAPABILITY_NAMED_IAM
            TemplatePath: !Sub "${AppName}-BuildArtifact::stack.yaml"
            TemplateConfiguration: !Sub "${AppName}-BuildArtifact::parameters.json"
          RunOrder: 1
        - Name: Approval
          ActionTypeId:
            Category: Approval
            Owner: AWS
            Version: "1"
            Provider: Manual
          RunOrder: 2
        - Name: execute-changeset
          InputArtifacts: []
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: "1"
            Provider: CloudFormation
          OutputArtifacts: []
          Configuration:
            StackName: !Sub "${AppName}-serverless-stack"
            ActionMode: CHANGE_SET_EXECUTE
            ChangeSetName: pipeline-changeset
          RunOrder: 3
      ArtifactStore:
        Type: S3
        Location: !Ref S3Bucket
